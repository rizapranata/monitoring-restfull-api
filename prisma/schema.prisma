// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  username String     @id @db.VarChar(100)
  password String     @db.VarChar(100)
  name     String     @db.VarChar(100)
  token    String?    @db.VarChar(100)
  email    String?    @db.VarChar(200)
  phone    String?    @db.VarChar(20)
  status   Boolean?   @db.TinyInt
  role     String     @db.VarChar(20)
  progress Progress[]
  project  Project[]

  @@map("users")
}

model Payment {
  id         Int     @id @default(autoincrement())
  isSettle   Boolean @default(false) @db.Bit(1)
  resiNumber String? @default("-") @db.VarChar(50)
  projectId  Int     @unique
  project    Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Project {
  id             Int        @id @default(autoincrement())
  name           String     @db.VarChar(225)
  desc           String     @db.Text
  username       String     @db.VarChar(100)
  user           User       @relation(fields: [username], references: [username], onDelete: Cascade)
  usernameClient String     @db.VarChar(100)
  progress       Progress[]
  payment        Payment?

  @@map("projects")
}

model Progress {
  id             Int     @id @default(autoincrement())
  title          String  @db.VarChar(225)
  desc           String? @db.Text
  images         Image[]
  username       String  @db.VarChar(100)
  user           User    @relation(fields: [username], references: [username], onDelete: Cascade)
  usernameClient String  @db.VarChar(100)
  project        Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId      Int

  @@map("progresses")
}

model Image {
  id         Int      @id @default(autoincrement())
  imageUrl   String   @db.VarChar(225)
  progressId Int
  progress   Progress @relation(fields: [progressId], references: [id], onDelete: Cascade)

  @@map("images")
}
